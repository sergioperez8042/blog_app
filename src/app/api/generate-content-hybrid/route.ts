import { NextRequest, NextResponse } from 'next/server';
import OpenAI from 'openai';

// Sistema de IA H√≠brido Avanzado
class HybridAIGenerator {
  private openai: OpenAI | null;

  constructor() {
    this.openai = process.env.OPENAI_API_KEY ? new OpenAI({
      apiKey: process.env.OPENAI_API_KEY,
    }) : null;
  }

  async generateContent(title: string, category: string, contentType: string, options: any = {}) {
    const generators = [
      this.tryStandardOpenAI.bind(this),
      this.tryLocalAI.bind(this),
      this.useMockGenerator.bind(this)
    ];

    for (const generator of generators) {
      try {
        const result = await generator(title, category, contentType, options);
        if (result) {
          return result;
        }
      } catch (error: any) {
        console.log(`üîÑ Generator ${generator.name} failed:`, error.message);
        continue;
      }
    }

    throw new Error('Todos los generadores fallaron');
  }

  async tryStandardOpenAI(title: string, category: string, contentType: string, options: any) {
    if (!this.openai) {
      console.log('‚ùå OpenAI no disponible (sin API key)');
      return null;
    }

    try {
      console.log('üöÄ Intentando con OpenAI...');
      const prompt = this.buildAdvancedPrompt(title, category, contentType, options);
      
      const completion = await this.openai.chat.completions.create({
        model: options.model || "gpt-3.5-turbo",
        messages: [
          {
            role: "system",
            content: this.getSystemPrompt(category, options.style)
          },
          {
            role: "user",
            content: prompt
          }
        ],
        max_tokens: options.maxTokens || 1200,
        temperature: options.temperature || 0.7,
      });

      const content = completion.choices[0]?.message?.content;
      if (!content) throw new Error('Respuesta vac√≠a de OpenAI');

      console.log('‚úÖ Contenido generado con OpenAI');
      return {
        content,
        source: 'openai',
        model: options.model || "gpt-3.5-turbo",
        confidence: 0.9
      };

    } catch (error: any) {
      console.log('‚ùå Error OpenAI:', error.code || error.message);
      throw error;
    }
  }

  async tryLocalAI(title: string, category: string, contentType: string, options: any) {
    try {
      console.log('üè† Intentando con IA Local (Ollama)...');
      
      const response = await fetch('http://localhost:11434/api/generate', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
          model: 'llama2',
          prompt: this.buildAdvancedPrompt(title, category, contentType, options),
          stream: false
        }),
        signal: AbortSignal.timeout(30000) // 30s timeout
      });

      if (response.ok) {
        const data = await response.json();
        console.log('‚úÖ Contenido generado con IA Local');
        return {
          content: data.response,
          source: 'local',
          model: 'llama2',
          confidence: 0.7
        };
      }
    } catch (error: any) {
      console.log('‚ùå IA Local no disponible:', error.message);
      return null;
    }
    return null;
  }

  useMockGenerator(title: string, category: string, contentType: string, options: any) {
    console.log('üé≠ Usando generador Mock inteligente...');
    
    const templates = {
      ideas: this.generateSmartIdeas(title, category, options),
      outline: this.generateSmartOutline(title, category, options),
      full: this.generateSmartArticle(title, category, options)
    };

    const content = templates[contentType as keyof typeof templates] || templates.full;
    
    console.log('‚úÖ Contenido generado con Mock IA');
    return {
      content: content + '\n\nü§ñ Generado con IA Mock Inteligente',
      source: 'mock',
      model: 'internal-smart',
      confidence: 0.6
    };
  }

  buildAdvancedPrompt(title: string, category: string, contentType: string, options: any) {
    const basePrompts = {
      ideas: `Como experto en ${category}, genera 7 ideas innovadoras y espec√≠ficas para un art√≠culo sobre "${title}". 
      Incluye perspectivas √∫nicas, casos de uso reales y √°ngulos poco explorados.`,
      
      outline: `Crea un esquema profesional y detallado para un art√≠culo sobre "${title}" en ${category}. 
      Estructura: Introducci√≥n impactante, 4-5 secciones principales con subsecciones, conclusi√≥n memorable.`,
      
      full: `Redacta un art√≠culo completo y profesional sobre "${title}" para la categor√≠a ${category}. 
      Requisitos: 800-1000 palabras, introducci√≥n compelling, desarrollo con ejemplos concretos, 
      subt√≠tulos claros, conclusi√≥n actionable.`
    };

    let prompt = basePrompts[contentType as keyof typeof basePrompts] || basePrompts.full;

    // Personalizaci√≥n avanzada
    if (options.targetAudience) {
      prompt += `\n\nüë• Audiencia: ${options.targetAudience}`;
    }

    if (options.tone) {
      prompt += `\n\nüéØ Tono: ${options.tone}`;
    }

    if (options.context) {
      prompt += `\n\nüìù Contexto adicional: ${options.context}`;
    }

    if (options.keywords) {
      prompt += `\n\nüîç Palabras clave a incluir: ${options.keywords.join(', ')}`;
    }

    return prompt;
  }

  getSystemPrompt(category: string, style?: string) {
    const categoryExpertise: Record<string, string> = {
      Technology: "Eres un CTO experimentado que explica tecnolog√≠a compleja de forma accesible, con enfoque en ROI y aplicaciones pr√°cticas.",
      Travel: "Eres un travel blogger profesional con 10+ a√±os de experiencia, especializado en experiencias aut√©nticas y consejos pr√°cticos.",
      Food: "Eres un chef michelin y food critic que combina t√©cnica culinaria avanzada con narrativas gastron√≥micas envolventes.",
      Fashion: "Eres un fashion director con background en Vogue, experto en tendencias, sostenibilidad y expresi√≥n personal a trav√©s del estilo.",
      Culture: "Eres un antrop√≥logo cultural PhD con especializaci√≥n en estudios contempor√°neos y an√°lisis de fen√≥menos sociales."
    };

    const styleGuides: Record<string, string> = {
      professional: "Mant√©n autoridad t√©cnica, usa datos y estad√≠sticas, estructura clara con bullet points.",
      casual: "Tono conversacional, usa analog√≠as cotidianas, incluye humor sutil, conecta emocionalmente.",
      academic: "Enfoque anal√≠tico profundo, referencias impl√≠citas, terminolog√≠a precisa, argumentaci√≥n estructurada.",
      creative: "Narrativa envolvente, met√°foras innovadoras, estructura no lineal, lenguaje evocativo."
    };

    const basePrompt = "Eres un escritor de contenido premium que crea art√≠culos que generan engagement y valor real para los lectores.";
    
    return [
      basePrompt,
      categoryExpertise[category] || categoryExpertise.Technology,
      styleGuides[style || 'professional'] || styleGuides.professional
    ].join(' ');
  }

  // Generadores Mock Inteligentes
  generateSmartIdeas(title: string, category: string, options: any) {
    const smartIdeas = this.getCategorySpecificIdeas(title, category);
    const trends = this.getCurrentTrends(category);
    const angles = this.getUniqueAngles(title, category);

    return `üí° Ideas innovadoras para "${title}":

üéØ Ideas principales:
${smartIdeas.map((idea, i) => `${i + 1}. ${idea}`).join('\n')}

üìà Conecta con tendencias actuales:
${trends.map(trend => `‚Ä¢ ${trend}`).join('\n')}

üîÑ √Ångulos √∫nicos:
${angles.map(angle => `‚Ä¢ ${angle}`).join('\n')}

üé® Formatos sugeridos:
‚Ä¢ Tutorial paso a paso
‚Ä¢ Caso de estudio real
‚Ä¢ Comparativa exhaustiva
‚Ä¢ Predicci√≥n de futuro
‚Ä¢ Behind the scenes

üìä M√©tricas de √©xito esperadas:
‚Ä¢ Engagement: Alto (comentarios + shares)
‚Ä¢ SEO: Potencial de ranking alto
‚Ä¢ Valor: Actionable insights`;
  }

  generateSmartOutline(title: string, category: string, options: any) {
    const sections = this.generateDynamicSections(title, category);
    
    return `üìã Esquema estrat√©gico para "${title}":

üöÄ I. HOOK INICIAL (100-150 palabras)
   ‚Ä¢ Estad√≠stica impactante o pregunta provocativa
   ‚Ä¢ Promise de valor claro
   ‚Ä¢ Preview de insights clave

üíé II. CONTEXTO Y RELEVANCIA
   ‚Ä¢ Estado actual del tema
   ‚Ä¢ Por qu√© importa ahora
   ‚Ä¢ Audiencia objetivo

${sections.map((section, i) => `üîç ${this.toRoman(i + 3)}. ${section.title}
   ${section.points.map(point => `‚Ä¢ ${point}`).join('\n   ')}`).join('\n\n')}

üéØ CONCLUSI√ìN ACTIONABLE
   ‚Ä¢ S√≠ntesis de valor
   ‚Ä¢ Next steps concretos
   ‚Ä¢ Call to action espec√≠fico

üìà ELEMENTOS DE ENGAGEMENT:
   ‚Ä¢ 3-4 subt√≠tulos H2 optimizados
   ‚Ä¢ Listas y bullet points
   ‚Ä¢ Quotes destacables
   ‚Ä¢ CTA intermedio`;
  }

  generateSmartArticle(title: string, category: string, options: any) {
    const hook = this.generateHook(title, category);
    const content = this.generateDynamicContent(title, category);
    const conclusion = this.generateConclusion(title, category);

    return `${title}

${hook}

${content}

${conclusion}

---
üìä M√©tricas estimadas: 800+ palabras | Tiempo de lectura: 4-5 min | SEO Score: Alto
ü§ñ Generado con IA H√≠brida Inteligente - ${new Date().toLocaleString()}`;
  }

  // M√©todos auxiliares
  getCategorySpecificIdeas(title: string, category: string): string[] {
    const ideaTemplates: Record<string, string[]> = {
      Technology: [
        `Implementaci√≥n pr√°ctica de ${title} en empresas reales`,
        `ROI y m√©tricas de √©xito con ${title}`,
        `Comparativa t√©cnica: ${title} vs alternativas`,
        `Roadmap de adopci√≥n de ${title} paso a paso`,
        `Casos de fracaso y lecciones aprendidas con ${title}`,
        `Futuro y evoluci√≥n esperada de ${title}`,
        `Integration challenges y soluciones para ${title}`
      ],
      Travel: [
        `Experiencias √∫nicas e inesperadas en ${title}`,
        `Presupuesto real y tips de ahorro para ${title}`,
        `Cultura local y etiqueta en ${title}`,
        `Fotograf√≠a y documentaci√≥n de ${title}`,
        `Sostenibilidad y turismo responsable en ${title}`,
        `Hidden gems y secretos locales de ${title}`,
        `Planning perfecto para ${title}`
      ]
    };

    return ideaTemplates[category] || ideaTemplates.Technology;
  }

  getCurrentTrends(category: string): string[] {
    const trends: Record<string, string[]> = {
      Technology: ['IA Generativa', 'Sostenibilidad Tech', 'Remote Work Tools', 'Cybersecurity'],
      Travel: ['Viaje Sostenible', 'Digital Nomads', 'Experiencias Locales', 'Slow Travel'],
      Food: ['Plant-based', 'Fermentaci√≥n', 'Zero Waste', 'Fusion Cuisine'],
      Fashion: ['Moda Circular', 'Tech Wearables', 'Vintage Revival', 'Personalizaci√≥n'],
      Culture: ['NFTs Arte', 'Metaverso Social', 'Activism Cultural', 'Gen Z Trends']
    };

    return trends[category] || trends.Technology;
  }

  getUniqueAngles(title: string, category: string): string[] {
    return [
      `Perspectiva hist√≥rica de ${title}`,
      `Impacto psicol√≥gico y social`,
      `An√°lisis econ√≥mico profundo`,
      `Visi√≥n global vs local`,
      `Demograf√≠as espec√≠ficas y ${title}`,
      `Intersecci√≥n con otras industrias`
    ];
  }

  generateDynamicSections(title: string, category: string) {
    return [
      {
        title: "AN√ÅLISIS PROFUNDO",
        points: ["Caracter√≠sticas clave", "Beneficios diferenciadores", "Limitaciones realistas"]
      },
      {
        title: "IMPLEMENTACI√ìN PR√ÅCTICA", 
        points: ["Pasos concretos", "Recursos necesarios", "Timeline realista"]
      },
      {
        title: "CASOS DE √âXITO",
        points: ["Ejemplos reales", "M√©tricas de impacto", "Lecciones extra√≠bles"]
      },
      {
        title: "PERSPECTIVA FUTURA",
        points: ["Tendencias emergentes", "Predicciones experto", "Oportunidades"]
      }
    ];
  }

  generateHook(title: string, category: string): string {
    const hooks = [
      `¬øSab√≠as que ${title} est√° transformando completamente la industria de ${category.toLowerCase()}? En los √∫ltimos 12 meses, hemos visto cambios revolucionarios que est√°n redefiniendo las reglas del juego.`,
      `Imagina poder dominar ${title} y convertirte en referente en ${category.toLowerCase()}. Este art√≠culo te muestra exactamente c√≥mo hacerlo, con estrategias probadas y insights exclusivos.`,
      `${title} no es solo una tendencia - es el futuro de ${category.toLowerCase()}. Y quienes no se adapten ahora, quedar√°n obsoletos en menos de 2 a√±os.`
    ];

    return hooks[Math.floor(Math.random() * hooks.length)];
  }

  generateDynamicContent(title: string, category: string): string {
    return `## El Panorama Actual

En el ecosistema actual de ${category.toLowerCase()}, ${title} emerge como un elemento transformador que est√° redefiniendo las mejores pr√°cticas y estableciendo nuevos est√°ndares de excelencia.

## An√°lisis Profundo

### Caracter√≠sticas Fundamentales

Las principales caracter√≠sticas que distinguen a ${title} incluyen:

‚Ä¢ **Innovaci√≥n t√©cnica**: Representando un salto cualitativo significativo
‚Ä¢ **Accesibilidad mejorada**: Democratizando el acceso a funcionalidades avanzadas  
‚Ä¢ **Escalabilidad**: Adapt√°ndose a diferentes necesidades y contextos
‚Ä¢ **Sostenibilidad**: Considerando el impacto a largo plazo

### Implementaci√≥n Estrat√©gica

Para una adopci√≥n exitosa de ${title}, los expertos recomiendan:

1. **Evaluaci√≥n inicial**: An√°lisis de compatibilidad con sistemas existentes
2. **Planificaci√≥n faseada**: Implementaci√≥n gradual para minimizar riesgos
3. **Capacitaci√≥n especializada**: Desarrollo de competencias internas
4. **M√©tricas de seguimiento**: KPIs espec√≠ficos para medir el impacto

## Casos de √âxito Documentados

Organizaciones l√≠deres han reportado mejoras significativas:

- **Eficiencia operativa**: Incrementos del 35-50% en productividad
- **Satisfacci√≥n del usuario**: Mejoras consistentes en experiencia
- **ROI comprobado**: Retorno de inversi√≥n en per√≠odos de 6-12 meses

## Perspectivas Futuras

Los analistas predicen que ${title} evolucionar√° hacia:

‚Ä¢ Mayor integraci√≥n con tecnolog√≠as emergentes
‚Ä¢ Personalizaci√≥n avanzada basada en IA
‚Ä¢ Est√°ndares industriales m√°s rigurosos
‚Ä¢ Ecosistemas colaborativos expandidos`;
  }

  generateConclusion(title: string, category: string): string {
    return `## Conclusi√≥n Estrat√©gica

${title} representa m√°s que una simple evoluci√≥n - es una revoluci√≥n que est√° transformando fundamentalmente el panorama de ${category.toLowerCase()}.

### Takeaways Clave:

‚úÖ **Acci√≥n inmediata**: Comenzar la exploraci√≥n e implementaci√≥n ahora
‚úÖ **Inversi√≥n inteligente**: Los beneficios superan significativamente los costos
‚úÖ **Ventaja competitiva**: Early adopters obtendr√°n posicionamiento privilegiado

### Pr√≥ximos Pasos Recomendados:

1. Realiza una auditor√≠a de tus necesidades actuales
2. Desarrolla un roadmap de implementaci√≥n
3. Invierte en capacitaci√≥n especializada
4. Establece m√©tricas de seguimiento

El futuro pertenece a quienes abrazan la innovaci√≥n estrat√©gicamente. ¬øEst√°s listo para liderar en la era de ${title}?`;
  }

  toRoman(num: number): string {
    const romans = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X'];
    return romans[num - 1] || num.toString();
  }
}

export async function POST(request: NextRequest) {
  try {
    const { title, category, contentType, options = {} } = await request.json();

    if (!title || !category) {
      return NextResponse.json(
        { error: 'T√≠tulo y categor√≠a son requeridos' },
        { status: 400 }
      );
    }

    console.log(`üéØ Generando contenido: "${title}" (${category}) - ${contentType}`);

    const hybridGenerator = new HybridAIGenerator();
    const result = await hybridGenerator.generateContent(title, category, contentType, options);

    console.log(`‚úÖ Contenido generado exitosamente con: ${result.source} (confianza: ${result.confidence})`);

    return NextResponse.json({
      content: result.content,
      success: true,
      source: result.source,
      model: result.model,
      confidence: result.confidence,
      generatedAt: new Date().toISOString()
    });

  } catch (error: any) {
    console.error('‚ùå Error generating content:', error);
    return NextResponse.json(
      { error: `Error del servidor: ${error.message}` },
      { status: 500 }
    );
  }
}
