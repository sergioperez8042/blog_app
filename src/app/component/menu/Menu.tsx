'use client';

import React, { useState, useEffect } from 'react';
import styles from './menu.module.css';
import Link from 'next/link';
import Image from 'next/image';
import { PostStore } from '@/lib/postStore';
import { postEvents } from '@/lib/events';

interface Post {
  id: string;
  title: string;
  category: string;
  content: string;
  createdAt: string;
  author: string;
  isAutoGenerated?: boolean;
  likes?: number;
}

// Función para obtener el post más popular
function getMostPopularPost(): Post | null {
  const post = PostStore.getMostPopularPost();
  return post || null;
}

// Función para obtener posts populares
function getPopularPosts(): Post[] {
  return PostStore.getPostsOrderedByLikes().slice(0, 4);
}

// Función para obtener la imagen de categoría
function getCategoryImage(category: string): string {
  const categoryImages: { [key: string]: string } = {
    'Technology': '/style.png',
    'Travel': '/travel.png',
    'Food': '/food.png',
    'Fashion': '/fashion.png',
    'Culture': '/culture.png',
    'Coding': '/coding.png'
  };
  return categoryImages[category] || '/p1.jpeg';
}

// Función para formatear la fecha
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString('es-ES', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric'
  });
}

const Menu: React.FC = () => {
  const [popularPosts, setPopularPosts] = useState(getPopularPosts().slice(0, 4));

  // Función para actualizar posts
  const updatePosts = () => {
    setPopularPosts(getPopularPosts().slice(0, 4));
  };

  useEffect(() => {
    // Escuchar eventos de like para actualizar inmediatamente
    const handleLikeUpdate = () => {
      updatePosts();
    };

    postEvents.on('likeUpdated', handleLikeUpdate);

    // Cleanup
    return () => {
      postEvents.off('likeUpdated', handleLikeUpdate);
    };
  }, []);

  // También actualizar cuando el componente se monta
  useEffect(() => {
    updatePosts();
  }, []);

  return (
    <div className={styles.container}>
      <h2 className={styles.subtitle}>What&apos;s hot</h2>
      <h1 className={styles.title}>Most Popular</h1>
      <div className={styles.items}>
        {popularPosts.length === 0 ? (
          <div className={styles.noContent}>
            <p>No hay posts populares aún.</p>
            <p>¡Genera contenido desde el admin!</p>
          </div>
        ) : (
          popularPosts.map((post) => (
            <Link key={post.id} href={`/posts/${post.id}`} className={styles.item}>
              <div className={styles.imageContainer}>
                <Image 
                  src={getCategoryImage(post.category)} 
                  alt={post.category} 
                  fill 
                  className={styles.image} 
                />
              </div>
              <div className={styles.textContainer}>
                <span className={styles.category}>{post.category}</span>
                <h3 className={styles.postTitle}>{post.title}</h3>
                <div className={styles.detail}>
                  <span className={styles.username}>{post.author}</span>
                  <span className={styles.date}>{formatDate(post.createdAt)}</span>
                  {post.isAutoGenerated && (
                    <span className={styles.aiTag}>🤖</span>
                  )}
                  <span className={styles.likes}>👍 {post.likes || 0}</span>
                </div>
              </div>
            </Link>
          ))
        )}
      </div>
      
      <h2 className={styles.subtitle}>Categories</h2>
      <h1 className={styles.title}>Choose by category</h1>
      <div className={styles.categoryList}>
        <Link href="/posts?category=Technology" className={`${styles.categoryItem} ${styles.technology}`}>
          Technology
        </Link>
        <Link href="/posts?category=Travel" className={`${styles.categoryItem} ${styles.travel}`}>
          Travel
        </Link>
        <Link href="/posts?category=Food" className={`${styles.categoryItem} ${styles.food}`}>
          Food
        </Link>
        <Link href="/posts?category=Fashion" className={`${styles.categoryItem} ${styles.fashion}`}>
          Fashion
        </Link>
        <Link href="/posts?category=Culture" className={`${styles.categoryItem} ${styles.culture}`}>
          Culture
        </Link>
      </div>
    </div>
  );
};

export default Menu;
