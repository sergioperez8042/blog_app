import React from 'react';
import styles from './menu.module.css';
import Link from 'next/link';
import Image from 'next/image';

interface Post {
  id: string;
  title: string;
  category: string;
  content: string;
  createdAt: string;
  author: string;
  isAutoGenerated?: boolean;
}

// FunciÃ³n para obtener posts populares
async function getPopularPosts(): Promise<Post[]> {
  try {
    // Para server components, usamos la URL interna del servidor
    const baseUrl = process.env.VERCEL_URL 
      ? `https://${process.env.VERCEL_URL}` 
      : 'http://localhost:3000';
    
    const response = await fetch(`${baseUrl}/api/posts`, {
      next: { revalidate: 60 } // Revalidate every 60 seconds
    });
    
    if (!response.ok) {
      throw new Error('Failed to fetch posts');
    }
    
    const data = await response.json();
    return data.posts || [];
  } catch (error) {
    console.error('Error fetching popular posts:', error);
    return [];
  }
}

// FunciÃ³n para obtener la imagen de categorÃ­a
function getCategoryImage(category: string): string {
  const categoryImages: { [key: string]: string } = {
    'Technology': '/style.png',
    'Travel': '/travel.png',
    'Food': '/food.png',
    'Fashion': '/fashion.png',
    'Culture': '/culture.png',
    'Coding': '/coding.png'
  };
  return categoryImages[category] || '/p1.jpeg';
}

// FunciÃ³n para formatear la fecha
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString('es-ES', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric'
  });
}

const Menu: React.FC = async () => {
  const posts = await getPopularPosts();
  const popularPosts = posts.slice(0, 4); // Mostrar solo los primeros 4

  return (
    <div className={styles.container}>
      <h2 className={styles.subtitle}>What&apos;s hot</h2>
      <h1 className={styles.title}>Most Popular</h1>
      <div className={styles.items}>
        {popularPosts.length === 0 ? (
          <div className={styles.noContent}>
            <p>No hay posts populares aÃºn.</p>
            <p>Â¡Genera contenido desde el admin!</p>
          </div>
        ) : (
          popularPosts.map((post) => (
            <Link key={post.id} href={`/posts/${post.id}`} className={styles.item}>
              <div className={styles.imageContainer}>
                <Image 
                  src={getCategoryImage(post.category)} 
                  alt={post.category} 
                  fill 
                  className={styles.image} 
                />
              </div>
              <div className={styles.textContainer}>
                <span className={styles.category}>{post.category}</span>
                <h3 className={styles.postTitle}>{post.title}</h3>
                <div className={styles.detail}>
                  <span className={styles.username}>{post.author}</span>
                  <span className={styles.date}>{formatDate(post.createdAt)}</span>
                  {post.isAutoGenerated && (
                    <span className={styles.aiTag}>ðŸ¤–</span>
                  )}
                </div>
              </div>
            </Link>
          ))
        )}
      </div>
      
      <h2 className={styles.subtitle}>Categories</h2>
      <h1 className={styles.title}>Choose by category</h1>
      <div className={styles.categoryList}>
        <Link href="/posts?category=Technology" className={`${styles.categoryItem} ${styles.technology}`}>
          Technology
        </Link>
        <Link href="/posts?category=Travel" className={`${styles.categoryItem} ${styles.travel}`}>
          Travel
        </Link>
        <Link href="/posts?category=Food" className={`${styles.categoryItem} ${styles.food}`}>
          Food
        </Link>
        <Link href="/posts?category=Fashion" className={`${styles.categoryItem} ${styles.fashion}`}>
          Fashion
        </Link>
        <Link href="/posts?category=Culture" className={`${styles.categoryItem} ${styles.culture}`}>
          Culture
        </Link>
      </div>
    </div>
  );
};

export default Menu;
