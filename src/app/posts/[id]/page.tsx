import React from 'react';
import styles from './page.module.css';
import Image from 'next/image';
import { PostStore } from '@/lib/postStore';

interface PostPageProps {
  params: {
    id: string;
  };
}

// Funci√≥n para obtener la imagen de categor√≠a
function getCategoryImage(category: string): string {
  const categoryImages: { [key: string]: string } = {
    'Technology': '/style.png',
    'Travel': '/travel.png',
    'Food': '/food.png',
    'Fashion': '/fashion.png',
    'Culture': '/culture.png',
    'Coding': '/coding.png'
  };
  return categoryImages[category] || '/p1.jpeg';
}

// Funci√≥n para formatear la fecha
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString('es-ES', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });
}

export default function PostPage({ params }: PostPageProps) {
  // Obtener el post por ID
  const post = PostStore.getPostById(params.id);

  if (!post) {
    return (
      <div className={styles.container}>
        <div className={styles.notFound}>
          <h1>Post no encontrado</h1>
          <p>El post que buscas no existe o ha sido eliminado.</p>
          <a href="/" className={styles.backLink}>‚Üê Volver al inicio</a>
        </div>
      </div>
    );
  }

  return (
    <div className={styles.container}>
      <div className={styles.infoContainer}>
        <div className={styles.textContainer}>
          <h1 className={styles.title}>{post.title}</h1>
          <div className={styles.meta}>
            <span className={styles.category}>{post.category}</span>
            <span className={styles.date}>{formatDate(post.createdAt)}</span>
            <span className={styles.author}>Por {post.author}</span>
            {post.isAutoGenerated && (
              <span className={styles.aiTag}>ü§ñ Generado por IA</span>
            )}
          </div>
        </div>
        <div className={styles.imageContainer}>
          <Image 
            src={getCategoryImage(post.category)} 
            alt={post.category}
            fill 
            className={styles.image} 
          />
        </div>
      </div>
      
      <div className={styles.content}>
        <div className={styles.contentText}>
          {post.content.split('\n\n').map((paragraph, index) => (
            <p key={index} className={styles.paragraph}>
              {paragraph}
            </p>
          ))}
        </div>
        
        {post.isAutoGenerated && (
          <div className={styles.aiInfo}>
            <h3>ü§ñ Informaci√≥n de generaci√≥n autom√°tica</h3>
            <div className={styles.aiDetails}>
              <p><strong>Fuente:</strong> {post.source || 'No especificado'}</p>
              <p><strong>Modelo:</strong> {post.model || 'No especificado'}</p>
              <p><strong>Confianza:</strong> {((post.confidence || 0) * 100).toFixed(1)}%</p>
            </div>
          </div>
        )}
        
        <div className={styles.actions}>
          <a href="/" className={styles.backButton}>‚Üê Volver al inicio</a>
          <a href="/posts" className={styles.allPostsButton}>Ver todos los posts</a>
        </div>
      </div>
    </div>
  );
}
